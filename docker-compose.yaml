networks:
  airflow_network:
    driver: bridge

volumes:
  postgres_data:
  airflow_plugins:

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      retries: 5

  # Airflow Scheduler
  scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    container_name: airflow_scheduler
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    command: poetry run airflow scheduler
    env_file:
      - .env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/gcp-service-key.json
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - ./docker/airflow-gcs-key.json:/opt/airflow/gcp-service-key.json
    networks:
      - airflow_network

  # Airflow Webserver (UI)
  webserver:
    build:
      context: .
      dockerfile: docker/Dockerfile.airflow
    container_name: airflow_webserver
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
      scheduler:
        condition: service_started
    command: poetry run scripts/entrypoint.sh
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
      - NEWS_API_KEY=${NEWS_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/opt/airflow/gcp-service-key.json
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - ./docker/airflow-gcs-key.json:/opt/airflow/gcp-service-key.json
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "test", "-f", "/opt/airflow/airflow-webserver.pid"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - airflow_network

  # Streamlit Crypto Sentiment App
  streamlit:
    build:
      context: .
      dockerfile: docker/Dockerfile.streamlit
    container_name: streamlit_app
    restart: always
    volumes:
      - ./.streamlit:/app/.streamlit/
      - ./crypto_sentiment:/app/crypto_sentiment/
    command: ["streamlit", "run", "crypto_sentiment/streamlit_app.py"]
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - airflow_network
    stdin_open: true  # Interactive debugging
    tty: true         # Keeps terminal open
